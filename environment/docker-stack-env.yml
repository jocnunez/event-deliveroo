version: '3'
services:
  mongodb:
    image: mongo:latest
    hostname: mongo
    environment:
      - MONGO_DATA_DIR=/data/db
    volumes:
      - data:/data/db
    ports:
      - 27017:27017
    command: mongod
    networks:
      - event-deliveroo-env-network
  zookeeper:
    image: wurstmeister/zookeeper
    hostname: zk
    ports:
      - "2181:2181"
    networks:
      - event-deliveroo-env-network
  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.2.10:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - event-deliveroo-env-network
  zipkin:
    image: openzipkin/zipkin
    hostname: zipkin
    environment:
      - STORAGE_TYPE=mem
    ports:
      - 9411:9411
    networks:
      - event-deliveroo-env-network
  prometheus:
    image: prom/prometheus
    hostname: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - event-deliveroo-env-network
  grafana:
    image: grafana/grafana
    hostname: grafana
    ports:
      - 3000:3000
    networks:
      - event-deliveroo-env-network
  portainer:
    image: portainer/portainer
    hostname: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - data:/data/portainer
      - data:/data/shared
    environment:
      - Europe/Paris=${TZ}
    networks:
      - event-deliveroo-env-network
volumes:
  data:
networks:
  event-deliveroo-env-network:
    driver: overlay